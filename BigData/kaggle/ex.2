{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**This notebook is an exercise in the [Pandas](https://www.kaggle.com/learn/pandas) course.  You can reference the tutorial at [this link](https://www.kaggle.com/residentmario/indexing-selecting-assigning).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"# Introduction\n\nIn this set of exercises we will work with the [Wine Reviews dataset](https://www.kaggle.com/zynicide/wine-reviews). ","metadata":{}},{"cell_type":"markdown","source":"Run the following cell to load your data and some utility functions (including code to check your answers).","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\nreviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.indexing_selecting_and_assigning import *\nprint(\"Setup complete.\")","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:16:08.622933Z","iopub.execute_input":"2021-12-19T13:16:08.623199Z","iopub.status.idle":"2021-12-19T13:16:12.288624Z","shell.execute_reply.started":"2021-12-19T13:16:08.623172Z","shell.execute_reply":"2021-12-19T13:16:12.287752Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":"Look at an overview of your data by running the following line.","metadata":{}},{"cell_type":"code","source":"reviews.head()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Exercises","metadata":{}},{"cell_type":"markdown","source":"## 1.\n\nSelect the `description` column from `reviews` and assign the result to the variable `desc`.","metadata":{}},{"cell_type":"code","source":"# Your code here\ndesc = reviews.description\n\n# Check your answer\nq1.check()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:17:56.180535Z","iopub.execute_input":"2021-12-19T13:17:56.180832Z","iopub.status.idle":"2021-12-19T13:17:56.190206Z","shell.execute_reply.started":"2021-12-19T13:17:56.180799Z","shell.execute_reply":"2021-12-19T13:17:56.189132Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":"Follow-up question: what type of object is `desc`? If you're not sure, you can check by calling Python's `type` function: `type(desc)`.","metadata":{}},{"cell_type":"code","source":"#q1.hint()\n#q1.solution()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## 2.\n\nSelect the first value from the description column of `reviews`, assigning it to variable `first_description`.","metadata":{}},{"cell_type":"code","source":"first_description = reviews.description.iloc[0]\n\n# Check your answer\nq2.check()\nfirst_description","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:25:33.197672Z","iopub.execute_input":"2021-12-19T13:25:33.198549Z","iopub.status.idle":"2021-12-19T13:25:33.208130Z","shell.execute_reply.started":"2021-12-19T13:25:33.198499Z","shell.execute_reply":"2021-12-19T13:25:33.207315Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"#q2.hint()\n#q2.solution()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## 3. \n\nSelect the first row of data (the first record) from `reviews`, assigning it to the variable `first_row`.","metadata":{}},{"cell_type":"code","source":"first_row = reviews.iloc[0]\n\n# Check your answer\nq3.check()\nfirst_row","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:31:59.641788Z","iopub.execute_input":"2021-12-19T13:31:59.642113Z","iopub.status.idle":"2021-12-19T13:31:59.654206Z","shell.execute_reply.started":"2021-12-19T13:31:59.642078Z","shell.execute_reply":"2021-12-19T13:31:59.652781Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"#q3.hint()\n#q3.solution()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:31:49.956059Z","iopub.execute_input":"2021-12-19T13:31:49.956949Z","iopub.status.idle":"2021-12-19T13:31:49.960637Z","shell.execute_reply.started":"2021-12-19T13:31:49.956890Z","shell.execute_reply":"2021-12-19T13:31:49.959928Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":"## 4.\n\nSelect the first 10 values from the `description` column in `reviews`, assigning the result to variable `first_descriptions`.\n\nHint: format your output as a pandas Series.","metadata":{}},{"cell_type":"code","source":"first_descriptions = reviews.description.iloc[0:10]\n\n# Check your answer\nq4.check()\nfirst_descriptions","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:34:57.852851Z","iopub.execute_input":"2021-12-19T13:34:57.853658Z","iopub.status.idle":"2021-12-19T13:34:57.867724Z","shell.execute_reply.started":"2021-12-19T13:34:57.853620Z","shell.execute_reply":"2021-12-19T13:34:57.866125Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"#q4.hint()\n#q4.solution()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:35:05.491961Z","iopub.execute_input":"2021-12-19T13:35:05.492426Z","iopub.status.idle":"2021-12-19T13:35:05.498635Z","shell.execute_reply.started":"2021-12-19T13:35:05.492380Z","shell.execute_reply":"2021-12-19T13:35:05.497764Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"markdown","source":"## 5.\n\nSelect the records with index labels `1`, `2`, `3`, `5`, and `8`, assigning the result to the variable `sample_reviews`.\n\nIn other words, generate the following DataFrame:\n\n![](https://i.imgur.com/sHZvI1O.png)","metadata":{}},{"cell_type":"code","source":"i=[1,2,3,5,8]\nsample_reviews = reviews.loc[i]\n\n# Check your answer\nq5.check()\nsample_reviews","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:38:19.372890Z","iopub.execute_input":"2021-12-19T13:38:19.373203Z","iopub.status.idle":"2021-12-19T13:38:19.397481Z","shell.execute_reply.started":"2021-12-19T13:38:19.373171Z","shell.execute_reply":"2021-12-19T13:38:19.396599Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"#q5.hint()\n#q5.solution()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:38:28.676211Z","iopub.execute_input":"2021-12-19T13:38:28.676515Z","iopub.status.idle":"2021-12-19T13:38:28.680652Z","shell.execute_reply.started":"2021-12-19T13:38:28.676482Z","shell.execute_reply":"2021-12-19T13:38:28.679711Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"markdown","source":"## 6.\n\nCreate a variable `df` containing the `country`, `province`, `region_1`, and `region_2` columns of the records with the index labels `0`, `1`, `10`, and `100`. In other words, generate the following DataFrame:\n\n![](https://i.imgur.com/FUCGiKP.png)","metadata":{}},{"cell_type":"code","source":"i=[0,1,10,100]\ncolumns =['country','province','region_1','region_2']\ndf = reviews.loc[i,columns]\n\n# Check your answer\nq6.check()\ndf","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:42:47.995482Z","iopub.execute_input":"2021-12-19T13:42:47.995769Z","iopub.status.idle":"2021-12-19T13:42:48.024105Z","shell.execute_reply.started":"2021-12-19T13:42:47.995739Z","shell.execute_reply":"2021-12-19T13:42:48.023057Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"#q6.hint()\n#q6.solution()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:42:56.792043Z","iopub.execute_input":"2021-12-19T13:42:56.792321Z","iopub.status.idle":"2021-12-19T13:42:56.796382Z","shell.execute_reply.started":"2021-12-19T13:42:56.792291Z","shell.execute_reply":"2021-12-19T13:42:56.795279Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":"## 7.\n\nCreate a variable `df` containing the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the tutorial:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. \n`loc`, meanwhile, indexes inclusively. \n\n> This is particularly confusing when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 1000 entries, while `df.loc[0:1000]` return 1001 of them! To get 1000 elements using `loc`, you will need to go one lower and ask for `df.iloc[0:999]`. ","metadata":{}},{"cell_type":"code","source":"\ncolumns =['country','variety']\ndf = reviews.loc[0:99,columns]\n\n# Check your answer\nq7.check()\ndf","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:45:46.504284Z","iopub.execute_input":"2021-12-19T13:45:46.505027Z","iopub.status.idle":"2021-12-19T13:45:46.522978Z","shell.execute_reply.started":"2021-12-19T13:45:46.504985Z","shell.execute_reply":"2021-12-19T13:45:46.522328Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"#q7.hint()\n#q7.solution()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## 8.\n\nCreate a DataFrame `italian_wines` containing reviews of wines made in `Italy`. Hint: `reviews.country` equals what?","metadata":{}},{"cell_type":"code","source":"italian_wines = reviews[reviews.country == 'Italy']\n# Check your answer\nq8.check()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:55:26.519483Z","iopub.execute_input":"2021-12-19T13:55:26.520264Z","iopub.status.idle":"2021-12-19T13:55:26.561806Z","shell.execute_reply.started":"2021-12-19T13:55:26.520213Z","shell.execute_reply":"2021-12-19T13:55:26.561173Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"#q8.hint()\n#q8.solution()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:52:22.694160Z","iopub.execute_input":"2021-12-19T13:52:22.694444Z","iopub.status.idle":"2021-12-19T13:52:22.698108Z","shell.execute_reply.started":"2021-12-19T13:52:22.694413Z","shell.execute_reply":"2021-12-19T13:52:22.697177Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"markdown","source":"## 9.\n\nCreate a DataFrame `top_oceania_wines` containing all reviews with at least 95 points (out of 100) for wines from Australia or New Zealand.","metadata":{}},{"cell_type":"code","source":"top_oceania_wines = reviews.loc[(reviews.country.isin(['Australia', 'New Zealand']))& (reviews.points >= 95)]\n\n# Check your answer\nq9.check()\ntop_oceania_wines","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:56:10.823558Z","iopub.execute_input":"2021-12-19T13:56:10.823837Z","iopub.status.idle":"2021-12-19T13:56:10.855902Z","shell.execute_reply.started":"2021-12-19T13:56:10.823806Z","shell.execute_reply":"2021-12-19T13:56:10.855040Z"},"trusted":true},"execution_count":58,"outputs":[]},{"cell_type":"code","source":"#q9.hint()\n#q9.solution()","metadata":{"execution":{"iopub.status.busy":"2021-12-19T13:56:30.341710Z","iopub.execute_input":"2021-12-19T13:56:30.342533Z","iopub.status.idle":"2021-12-19T13:56:30.346729Z","shell.execute_reply.started":"2021-12-19T13:56:30.342486Z","shell.execute_reply":"2021-12-19T13:56:30.345721Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"markdown","source":"# Keep going\n\nMove on to learn about **[summary functions and maps](https://www.kaggle.com/residentmario/summary-functions-and-maps)**.","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/pandas/discussion) to chat with other learners.*","metadata":{}}]}