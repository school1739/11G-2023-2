"""Предприятие производит закупку изделий A и B, на которую выделена определённая сумма денег.
У поставщика есть в наличии различные модификации этих изделий по различной цене.
При покупке необходимо руководствоваться следующими правилами:

1. Нужно купить как можно больше изделий, независимо от их типа и модификации.
2. Если можно разными способами купить максимальное количество изделий, нужно выбрать тот способ,
    при котором будет куплено как можно больше изделий B.
3. Если можно разными способами купить максимальное количество изделий с одинаковым количеством изделий B,
    нужно выбрать тот способ, при котором вся покупка будет дешевле.

Определите, сколько всего будет куплено изделий B и какая сумма останется неиспользованной.

Входные данные.

Первая строка входного файла содержит два целых числа: N — общее количество изделий у поставщика и M — сумма
выделенных на закупку денег (в рублях). Каждая из следующих N строк содержит целое число (цена изделия в рублях)
и символ (латинская буква A или B), определяющий тип изделия. Все данные в строках входного файла отделены одним пробелом.
В ответе запишите два целых числа: сначала количество закупленных изделий типа B, затем оставшуюся неиспользованной сумму денег.
Пример входного файла:

6 130
30 A
50 A
60 B
20 B
70 B
10 A

В данном случае можно купить не более 4 изделий, из них не более 2 изделий B.
Минимальная цена такой покупки 120 рублей (покупаем изделия 30A, 60B, 20B, 10A).
Останется 10 рублей. В ответе надо записать числа 2 и 10."""





#идея моего решения состоит в том, что:
#переводим 26.txt в массив, где каждый элемент равен цене и букве товара
#ну соответственно первую строчку сливаем и сплитуем в переменные
#дальше создаем список списков, в которых по отдельности содержится буква и цена товара
#избавляемся от буквы и создаем только массив из стоимости
#сортируем его
#дальше, по задумке, нужно было вернуть буквы товара каждой стоимости, которая ему соотвествовала
#но некоторым буквам соответствует одна цена
#решение проблемы - проверять из списка всех раздельных букв и стоимости совпадает ли цена, если да, то снова создаем список списков с ценой
#и буквой ему соответсвующей, а потом удаляем эту цену из уже отсортированного списка и из начального
#а потом хрен знает

не сделал:( мозгов не хватило, да и ктож знал, что можно было сразу сортирануть без избавления от буквы:(((

####sp = open("26.txt", "r")
####cost_and_tovari = sp.readlines()
####cost_and_tovari.sort()
####print(cost_and_tovari)
####alltovari_and_allcost = cost_and_tovari[0].split(" ")
####all_tovari = alltovari_and_allcost[0]
####all_cost = alltovari_and_allcost[1]
####
####ottdel_cost_tovar = []
####otdel_cost_for_sort = []
####print(cost_and_tovari[0].split(" "))
####for ot in range(int(all_tovari)):
####    ottdel_cost_tovar.append(cost_and_tovari[ot].split(" "))
####ottdel_cost_tovar.pop(0)
####
####for cost in range(int(all_tovari) - 1):
####    otdel_cost_for_sort.append(ottdel_cost_tovar[cost][0])
####
####otdel_cost_for_sort.sort(reverse=True) #шо бы надо
####
####sp_with_sort_cost_and_bukva = []
####
####for ch1 in range(len(all_tovari) - 1):
####    for ch2 in range(len(all_tovari) - 1):
####        if otdel_cost_for_sort[ch1] == ottdel_cost_tovar[ch2]:
####            sp_with_sort_cost_and_bukva.append(ottdel_cost_tovar[ch2])
####
####print(sp_with_sort_cost_and_bukva)
####print(otdel_cost_for_sort)
####print(ottdel_cost_tovar)
####print(all_cost, all_tovari)

# NOT OK, whatever